{"version":3,"sources":["views/surpote/SuporteData.js","views/surpote/Suporte.js"],"names":["suporteData","id","descricao","criado","ultimaresposta","status","respostas","type","feitoem","feitopor","text","image","StoryblokClient","require","getBadge","fields","Suporte","useState","openSuport","setopenSuport","large","setLarge","suporte","setsuporte","accessToken","style","flexDirection","display","justifyContent","block","color","onClick","row","name","placeholder","className","caret","items","hover","striped","bordered","size","itemsPerPage","pagination","clickableRows","onRowClick","item","scopedSlots","show","onClose","closeButton","fontSize","map","resposta","key","respostaPai","marginTop","fontWeight","md","htmlFor","xs","rows","action","method","encType","custom","value","col","alert"],"mappings":"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","file":"static/js/23.e8c4131b.chunk.js","sourcesContent":["const suporteData = [\r\n    {id: \"#812391\", descricao: 'Como adicionar um membro no meu sindicato?', criado: '18/08/2020', ultimaresposta: '20/08/2020', status: 'Concluido',respostas:[{id:0,type:0,feitoem:\"20/08/2020\",feitopor:\"Colaborador Técnico\",text:\"Comentário em formato rich text com imagem e html\",image:\"localhost:3000/9.jpg\"}]},\r\n    {id: \"#123911\", descricao: 'Como editar o nome de um membro de sindicato?', criado: '21/08/2020', ultimaresposta: '-', status: 'Aberto'},\r\n  ]\r\n  \r\nexport default suporteData;\r\n  ","import React, {useState} from 'react'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CInputGroupPrepend,\n  CDataTable,\n  CRow,\n  CAlert,\n  CButton,\n  CFormGroup,\n  CInputGroup,\n  CInput,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CForm,\n  CLabel,\n  CFormText,\n  CTextarea,\n  CSelect,\n  CInputFile\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\nimport { Link } from 'react-router-dom'\n\nimport suporteData from './SuporteData'\n\nconst StoryblokClient = require('storyblok-js-client')\n\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Concluído': return 'success'\n    case 'Em Andamento': return 'secondary'\n    case 'Aberto': return 'warning'\n    default: return 'primary'\n  }\n}\nconst fields = ['descricao','criado', 'ultimaresposta', 'status']\nconst fieldsComentarios = ['comentario','feitopor', 'feitoem']\n\nconst Suporte = () => {\n  const [openSuport, setopenSuport] = useState(false)\n  const [large, setLarge] = useState(false)\n  const [suporte, setsuporte] = useState(null)\n  \n  let Storyblok = new StoryblokClient({\n    accessToken: 'lED5TkhB3uFikImI7MgEmwtt'\n  })\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader style={{flexDirection:\"row\",display:\"flex\",justifyContent:\"space-between\"}}>\n              <div>\n                <h3>Suporte</h3>\n                <span>Tem uma dúvida? Conta pra gente e acompanha aqui o resultado.</span>\n              </div>\n              <div>\n                <CButton block color=\"primary\" onClick={() => setopenSuport(!openSuport)}>ABRIR CHAMADO</CButton>\n              </div>\n              <div>\n                <CFormGroup row>\n                  <CInputGroup>\n                    <CInputGroupPrepend>\n                      <CButton type=\"button\" color=\"primary\"><CIcon name=\"cil-magnifying-glass\" /> Procurar</CButton>\n                    </CInputGroupPrepend>\n                    <CInput id=\"input1-group2\" name=\"input1-group2\" placeholder=\"Nome de suporte\" />\n                  </CInputGroup>\n                </CFormGroup>\n                \n              </div>\n              <div>\n              <CInputGroup>\n                      <CDropdown className=\"input-group-prepend\">\n                          <CDropdownToggle caret color=\"primary\">\n                            Filtrar\n                          </CDropdownToggle>\n                        <CDropdownMenu>\n                          <CDropdownItem>Concluído</CDropdownItem>\n                          <CDropdownItem>Aberto</CDropdownItem>\n                          <CDropdownItem>Em andamento</CDropdownItem>\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </CInputGroup>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={suporteData}\n              fields={fields}\n              hover\n              striped\n              bordered\n              size=\"sm\"\n              itemsPerPage={10}\n              pagination\n              clickableRows\n              onRowClick={(item) => {setLarge(!large);setsuporte(item)}}\n              scopedSlots = {{\n                'status':\n                  (item)=>(\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CModal \n              show={large} \n              onClose={() => setLarge(!large)}\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Chamado nº {suporte&&suporte.id} [{suporte&&suporte.status}]</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <p>{suporte&&suporte.descricao}<br></br><p style={{fontSize:9}}>Criando em {suporte&&suporte.criado}</p></p>\n                {suporte&&suporte.respostas&&\n                  suporte.respostas.map((resposta) => (\n                    <CAlert key={resposta.id} color={(resposta.type==0) ? \"secondary\" : \"success\"}>\n                      {(resposta.respostaPai!=null)&&<p>EM RESPOSTA<br></br></p>}\n                      <div>{resposta.text}</div>\n                      <div style={{display:\"flex\",marginTop:10,flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                        <p style={{fontWeight:\"bold\"}}>{resposta.feitopor}</p>\n                        <p>{resposta.feitoem}</p>\n                      </div>\n                    </CAlert>\n                  ))\n                }\n                {suporte&&suporte.status==\"Aberto\"&&<div>\n              <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Novo Comentário</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea \n                      name=\"textarea-input\" \n                      id=\"textarea-input\" \n                      rows=\"9\"\n                      placeholder=\"Mensagem de comentário...\" \n                    />\n                  <CButton color=\"primary\" onClick={() => setLarge(!large)}>Adicionar Comentário</CButton>\n                  </CCol>\n                </CFormGroup></div>}\n              </CModalBody>\n             \n              <CModalFooter>\n                <CButton color=\"secondary\" onClick={() => setLarge(!large)}>Fechar</CButton>\n              </CModalFooter>\n            </CModal>\n            <CModal \n              show={openSuport} \n              onClose={() => setopenSuport(!openSuport)}\n              size=\"lg\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Abrir Novo Chamado</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel>Chamado em nome de</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <p className=\"form-control-static\">Meu Nome</p>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Dúvida</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea \n                      name=\"textarea-input\" \n                      id=\"textarea-input\" \n                      rows=\"9\"\n                      placeholder=\"Mensagem da dúvida...\" \n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Secretaria</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect custom name=\"select\" id=\"select\">\n                      <option value=\"0\">Selecione secretaria para responder</option>\n                      <option value=\"1\">Jurídica</option>\n                      <option value=\"2\">SECOM</option>\n                      <option value=\"3\">SETI</option>\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"file-input\">Arquivo (se houver)</CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile id=\"file-input\" name=\"file-input\"/>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"primary\" onClick={() => {alert(\"Chamado enviado! Aguarde resposta.\");setopenSuport(!openSuport)}}>Enviar</CButton>\n                <CButton color=\"secondary\" onClick={() => setopenSuport(!openSuport)}>Fechar</CButton>\n              </CModalFooter>\n            </CModal>\n\n      </CRow>\n    </>\n  )\n}\n\nexport default Suporte\n"],"sourceRoot":""}