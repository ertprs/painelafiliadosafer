{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/pagamentos/pagamentos/PagamentosData.js","views/pagamentos/pagamentos/Pagamentos.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","pagamentoData","id","numero","via","mesreferente","recebido","vencimento","status","getBadge","fields","Pagamentos","useState","large","setLarge","contrato","setContrato","style","flexDirection","display","justifyContent","row","type","color","name","placeholder","className","caret","items","hover","striped","bordered","size","itemsPerPage","pagination","clickableRows","onRowClick","item","scopedSlots","show","onClose","closeButton","onClick","alert"],"mappings":"4NAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,uFICvFC,EANO,CAClB,CAACC,GAAI,aAAaC,OAAQ,cAAeC,IAAI,WAAWC,aAAc,SAASC,SAAU,aAAcC,WAAY,aAAcC,OAAQ,aACzI,CAACN,GAAI,aAAaC,OAAQ,cAAeC,IAAI,WAAWC,aAAc,QAAQC,SAAU,aAAcC,WAAY,aAAcC,OAAQ,YACxI,CAACN,GAAI,aAAaC,OAAQ,cAAeC,IAAI,WAAWC,aAAc,QAAQC,SAAU,aAAcC,WAAY,aAAcC,OAAQ,SC0BtIC,EAAW,SAACD,GAChB,OAAQA,GACN,IAAK,OACH,MAAO,UACT,IAAK,YACH,MAAO,YACT,IAAK,WACH,MAAO,UACT,IAAK,WACH,MAAO,SACT,QACE,MAAO,YAIPE,EAAS,CACb,SACA,eACA,WACA,aACA,MACA,UAgIaC,UA7HI,WAAO,IAAD,EACGC,oBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,OAESF,mBAAS,MAFlB,mBAEhBG,EAFgB,KAENC,EAFM,KAIvB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAO,CACLC,cAAe,MACfC,QAAS,OACTC,eAAgB,kBAGlB,6BACE,4CACA,2GAKF,6BACE,kBAAC,IAAD,CAAYC,KAAG,GACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,SAASC,MAAM,WAC3B,kBAAC,IAAD,CAAOC,KAAK,yBADd,cAIF,kBAAC,IAAD,CACEtB,GAAG,gBACHsB,KAAK,gBACLC,YAAY,wBAKpB,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,UAAU,uBACnB,kBAAC,IAAD,CAAiBC,OAAK,EAACJ,MAAM,WAA7B,WAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,kBACA,kBAAC,IAAD,iBACA,kBAAC,IAAD,kBAMV,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,MAAO3B,EACPS,OAAQA,EACRmB,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,eAAa,EACbC,WAAY,SAACC,GACXvB,GAAUD,GACVG,EAAYqB,IAEdC,YAAa,CACX9B,OAAQ,SAAC6B,GAAD,OACN,4BACE,kBAAC,IAAD,CAAQd,MAAOd,EAAS4B,EAAK7B,SAC1B6B,EAAK7B,gBAStB,kBAAC,IAAD,CAAQ+B,KAAM1B,EAAO2B,QAAS,kBAAM1B,GAAUD,IAAQmB,KAAK,MACzD,kBAAC,IAAD,CAAcS,aAAW,GACvB,kBAAC,IAAD,8BACsB1B,GAAYA,EAASV,aAD3C,KAEGU,GAAYA,EAASP,OAFxB,MAKF,kBAAC,IAAD,MACA,kBAAC,IAAD,KACGO,GAAgC,SAApBA,EAASP,QACpB,kBAAC,IAAD,CACEe,MAAM,UACNmB,QAAS,WACPC,MACE,oCACE5B,EAASV,aACT,SAEJS,GAAUD,KARd,mBAcF,kBAAC,IAAD,CACEU,MAAM,YACNmB,QAAS,kBACPC,MACE,mDACE5B,EAASV,aACT,YANR","file":"static/js/23.b5c1a7ea.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const pagamentoData = [\r\n    {id: \"1298037144\",numero: \"#1298037144\", via:\"Primeira\",mesreferente: 'Agosto',recebido: '01/08/2020', vencimento: '31/08/2020', status: 'Em Aberto'},\r\n    {id: \"1012123717\",numero: \"#1012123717\", via:\"Primeira\",mesreferente: 'Julho',recebido: '01/07/2020', vencimento: '31/07/2020', status: 'Atrasado'},\r\n    {id: \"1901231283\",numero: \"#1901231283\", via:\"Primeira\",mesreferente: 'Junho',recebido: '01/06/2020', vencimento: '30/06/2020', status: 'Pago'},\r\n]\r\n  \r\nexport default pagamentoData;\r\n  ","import React, { useState } from \"react\";\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CInputGroupPrepend,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n  CFormGroup,\r\n  CInputGroup,\r\n  CInput,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from \"@coreui/react\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nimport pagamentoData from \"./PagamentosData\";\r\n\r\nconst getBadge = (status) => {\r\n  switch (status) {\r\n    case \"Pago\":\r\n      return \"success\";\r\n    case \"Em Aberto\":\r\n      return \"secondary\";\r\n    case \"Pendente\":\r\n      return \"warning\";\r\n    case \"Atrasado\":\r\n      return \"danger\";\r\n    default:\r\n      return \"primary\";\r\n  }\r\n};\r\n\r\nconst fields = [\r\n  \"numero\",\r\n  \"mesreferente\",\r\n  \"recebido\",\r\n  \"vencimento\",\r\n  \"via\",\r\n  \"status\",\r\n];\r\n\r\nconst Pagamentos = () => {\r\n  const [large, setLarge] = useState(false);\r\n  const [contrato, setContrato] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader\r\n              style={{\r\n                flexDirection: \"row\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div>\r\n                <h3>Mensalidades</h3>\r\n                <span>\r\n                  Confira aqui os status de suas mensalidades de afiliação a\r\n                  CONAFER\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <CFormGroup row>\r\n                  <CInputGroup>\r\n                    <CInputGroupPrepend>\r\n                      <CButton type=\"button\" color=\"primary\">\r\n                        <CIcon name=\"cil-magnifying-glass\" /> Procurar\r\n                      </CButton>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      id=\"input1-group2\"\r\n                      name=\"input1-group2\"\r\n                      placeholder=\"Mês referente\"\r\n                    />\r\n                  </CInputGroup>\r\n                </CFormGroup>\r\n              </div>\r\n              <div>\r\n                <CInputGroup>\r\n                  <CDropdown className=\"input-group-prepend\">\r\n                    <CDropdownToggle caret color=\"primary\">\r\n                      Filtrar\r\n                    </CDropdownToggle>\r\n                    <CDropdownMenu>\r\n                      <CDropdownItem>Em Aberto</CDropdownItem>\r\n                      <CDropdownItem>Atrasado</CDropdownItem>\r\n                      <CDropdownItem>Pago</CDropdownItem>\r\n                    </CDropdownMenu>\r\n                  </CDropdown>\r\n                </CInputGroup>\r\n              </div>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={pagamentoData}\r\n                fields={fields}\r\n                hover\r\n                striped\r\n                bordered\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n                clickableRows\r\n                onRowClick={(item) => {\r\n                  setLarge(!large);\r\n                  setContrato(item);\r\n                }}\r\n                scopedSlots={{\r\n                  status: (item) => (\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                    </td>\r\n                  ),\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CModal show={large} onClose={() => setLarge(!large)} size=\"lg\">\r\n          <CModalHeader closeButton>\r\n            <CModalTitle>\r\n              Mensalidade mês de {contrato && contrato.mesreferente} [\r\n              {contrato && contrato.status}]\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody></CModalBody>\r\n          <CModalFooter>\r\n            {contrato && contrato.status === \"Pago\" && (\r\n              <CButton\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  alert(\r\n                    \"Download recibo pagamento mês \" +\r\n                      contrato.mesreferente +\r\n                      \".pdf?\"\r\n                  );\r\n                  setLarge(!large);\r\n                }}\r\n              >\r\n                Download RECIBO\r\n              </CButton>\r\n            )}\r\n            <CButton\r\n              color=\"secondary\"\r\n              onClick={() =>\r\n                alert(\r\n                  \"Baixar arquivo de boleto mensalidade do mês''\" +\r\n                    contrato.mesreferente +\r\n                    \".pdf'?\"\r\n                )\r\n              }\r\n            >\r\n              Download BOLETO\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagamentos;\r\n"],"sourceRoot":""}