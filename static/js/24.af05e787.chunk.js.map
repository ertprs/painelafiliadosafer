{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/surpote/SuporteData.js","views/surpote/Suporte.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","suporteData","id","descricao","criado","ultimaresposta","status","respostas","type","feitoem","feitopor","text","image","getBadge","fields","Suporte","useState","openSuport","setopenSuport","large","setLarge","suporte","setsuporte","style","flexDirection","display","justifyContent","block","color","onClick","row","name","placeholder","className","caret","items","hover","striped","bordered","size","itemsPerPage","pagination","clickableRows","onRowClick","item","scopedSlots","show","onClose","closeButton","fontSize","map","resposta","key","respostaPai","marginTop","fontWeight","md","htmlFor","xs","rows","action","method","encType","custom","col","alert"],"mappings":"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","file":"static/js/24.af05e787.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const suporteData = [\r\n    {id: \"#812391\", descricao: 'Como adicionar um membro no meu sindicato?', criado: '18/08/2020', ultimaresposta: '20/08/2020', status: 'Concluido',respostas:[{id:0,type:0,feitoem:\"20/08/2020\",feitopor:\"Colaborador Técnico\",text:\"Comentário em formato rich text com imagem e html\",image:\"localhost:3000/9.jpg\"}]},\r\n    {id: \"#123911\", descricao: 'Como editar o nome de um membro de sindicato?', criado: '21/08/2020', ultimaresposta: '-', status: 'Aberto'},\r\n  ]\r\n  \r\nexport default suporteData;\r\n  ","import React, { useState } from \"react\";\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CInputGroupPrepend,\r\n  CDataTable,\r\n  CRow,\r\n  CAlert,\r\n  CButton,\r\n  CFormGroup,\r\n  CInputGroup,\r\n  CInput,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CForm,\r\n  CLabel,\r\n  CTextarea,\r\n  CSelect,\r\n  CInputFile,\r\n} from \"@coreui/react\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nimport suporteData from \"./SuporteData\";\r\n\r\nconst getBadge = (status) => {\r\n  switch (status) {\r\n    case \"Concluído\":\r\n      return \"success\";\r\n    case \"Em Andamento\":\r\n      return \"secondary\";\r\n    case \"Aberto\":\r\n      return \"warning\";\r\n    default:\r\n      return \"primary\";\r\n  }\r\n};\r\nconst fields = [\"descricao\", \"criado\", \"ultimaresposta\", \"status\"];\r\n\r\nconst Suporte = () => {\r\n  const [openSuport, setopenSuport] = useState(false);\r\n  const [large, setLarge] = useState(false);\r\n  const [suporte, setsuporte] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader\r\n              style={{\r\n                flexDirection: \"row\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div>\r\n                <h3>Suporte</h3>\r\n                <span>\r\n                  Tem uma dúvida? Conta pra gente e acompanha aqui o resultado.\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <CButton\r\n                  block\r\n                  color=\"primary\"\r\n                  onClick={() => setopenSuport(!openSuport)}\r\n                >\r\n                  ABRIR CHAMADO\r\n                </CButton>\r\n              </div>\r\n              <div>\r\n                <CFormGroup row>\r\n                  <CInputGroup>\r\n                    <CInputGroupPrepend>\r\n                      <CButton type=\"button\" color=\"primary\">\r\n                        <CIcon name=\"cil-magnifying-glass\" /> Procurar\r\n                      </CButton>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      id=\"input1-group2\"\r\n                      name=\"input1-group2\"\r\n                      placeholder=\"Nome de suporte\"\r\n                    />\r\n                  </CInputGroup>\r\n                </CFormGroup>\r\n              </div>\r\n              <div>\r\n                <CInputGroup>\r\n                  <CDropdown className=\"input-group-prepend\">\r\n                    <CDropdownToggle caret color=\"primary\">\r\n                      Filtrar\r\n                    </CDropdownToggle>\r\n                    <CDropdownMenu>\r\n                      <CDropdownItem>Concluído</CDropdownItem>\r\n                      <CDropdownItem>Aberto</CDropdownItem>\r\n                      <CDropdownItem>Em andamento</CDropdownItem>\r\n                    </CDropdownMenu>\r\n                  </CDropdown>\r\n                </CInputGroup>\r\n              </div>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={suporteData}\r\n                fields={fields}\r\n                hover\r\n                striped\r\n                bordered\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n                clickableRows\r\n                onRowClick={(item) => {\r\n                  setLarge(!large);\r\n                  setsuporte(item);\r\n                }}\r\n                scopedSlots={{\r\n                  status: (item) => (\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                    </td>\r\n                  ),\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CModal show={large} onClose={() => setLarge(!large)} size=\"lg\">\r\n          <CModalHeader closeButton>\r\n            <CModalTitle>\r\n              Chamado nº {suporte && suporte.id} [{suporte && suporte.status}]\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <p>\r\n              {suporte && suporte.descricao}\r\n              <br></br>\r\n              <p style={{ fontSize: 9 }}>\r\n                Criando em {suporte && suporte.criado}\r\n              </p>\r\n            </p>\r\n            {suporte &&\r\n              suporte.respostas &&\r\n              suporte.respostas.map((resposta) => (\r\n                <CAlert\r\n                  key={resposta.id}\r\n                  color={resposta.type === 0 ? \"secondary\" : \"success\"}\r\n                >\r\n                  {resposta.respostaPai != null && (\r\n                    <p>\r\n                      EM RESPOSTA<br></br>\r\n                    </p>\r\n                  )}\r\n                  <div>{resposta.text}</div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      marginTop: 10,\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <p style={{ fontWeight: \"bold\" }}>{resposta.feitopor}</p>\r\n                    <p>{resposta.feitoem}</p>\r\n                  </div>\r\n                </CAlert>\r\n              ))}\r\n            {suporte && suporte.status === \"Aberto\" && (\r\n              <div>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"textarea-input\">Novo Comentário</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CTextarea\r\n                      name=\"textarea-input\"\r\n                      id=\"textarea-input\"\r\n                      rows=\"9\"\r\n                      placeholder=\"Mensagem de comentário...\"\r\n                    />\r\n                    <CButton color=\"primary\" onClick={() => setLarge(!large)}>\r\n                      Adicionar Comentário\r\n                    </CButton>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </div>\r\n            )}\r\n          </CModalBody>\r\n\r\n          <CModalFooter>\r\n            <CButton color=\"secondary\" onClick={() => setLarge(!large)}>\r\n              Fechar\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n        <CModal\r\n          show={openSuport}\r\n          onClose={() => setopenSuport(!openSuport)}\r\n          size=\"lg\"\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle>Abrir Novo Chamado</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CForm\r\n              action=\"\"\r\n              method=\"post\"\r\n              encType=\"multipart/form-data\"\r\n              className=\"form-horizontal\"\r\n            >\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel>Chamado em nome de</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <p className=\"form-control-static\">Meu Nome</p>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"textarea-input\">Dúvida</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CTextarea\r\n                    name=\"textarea-input\"\r\n                    id=\"textarea-input\"\r\n                    rows=\"9\"\r\n                    placeholder=\"Mensagem da dúvida...\"\r\n                  />\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"select\">Secretaria</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CSelect custom name=\"select\" id=\"select\">\r\n                    <option value=\"0\">\r\n                      Selecione secretaria para responder\r\n                    </option>\r\n                    <option value=\"1\">Jurídica</option>\r\n                    <option value=\"2\">SECOM</option>\r\n                    <option value=\"3\">SETI</option>\r\n                  </CSelect>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CLabel col md=\"3\" htmlFor=\"file-input\">\r\n                  Arquivo (se houver)\r\n                </CLabel>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInputFile id=\"file-input\" name=\"file-input\" />\r\n                </CCol>\r\n              </CFormGroup>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                alert(\"Chamado enviado! Aguarde resposta.\");\r\n                setopenSuport(!openSuport);\r\n              }}\r\n            >\r\n              Enviar\r\n            </CButton>\r\n            <CButton\r\n              color=\"secondary\"\r\n              onClick={() => setopenSuport(!openSuport)}\r\n            >\r\n              Fechar\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Suporte;\r\n"],"sourceRoot":""}