{"version":3,"sources":["redux/actions/messages.js","views/pages/rememberPassword/RememberPassword.js","redux/actions/rememberPassword.js"],"names":["successMessage","success","type","payload","errorMessage","error","RememberPassword","dispatch","useDispatch","useSelector","state","MessagesReducer","useState","setInput","className","sm","md","lg","xl","onSubmit","event","preventDefault","a","axios","post","console","message","name","placeholder","onChange","target","value","xs","color","to","show","onShowChange","closeButton"],"mappings":"6KAAA,oEAAO,IAAMA,EAAiB,SAACC,GAAD,MAAc,CAC1CC,KAAM,UACNC,QAAS,CACPF,aAKSG,EAAe,SAACC,GAAD,MAAY,CACtCH,KAAM,QACNC,QAAS,CACPE,Y,sJC+GWC,UA7FU,WACvB,IAAMC,EAAWC,cADY,EAGFC,aAAY,SAACC,GAAD,OAAWA,EAAMC,mBAAhDV,EAHqB,EAGrBA,QAASI,EAHY,EAGZA,MAHY,EAKHO,qBALG,mBAKfC,GALe,WAiB7B,OACE,yBAAKC,UAAU,6CACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMA,UAAU,0BACd,kBAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAC9B,kBAAC,IAAD,CAAYJ,UAAU,oBACpB,kBAAC,IAAD,CAAOA,UAAU,aACf,kBAAC,IAAD,KACE,kBAAC,IAAD,yBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,SAjBE,SAACC,GACxBA,EAAMC,iBAENd,ECvC+B,uCAAW,WAAOA,GAAP,SAAAe,EAAA,+EAEpCC,IAAMC,KAAK,IAFyB,OAI1CjB,EAASP,aAAe,IAJkB,gDAM1CyB,QAAQpB,MAAM,KAAIqB,SAClBnB,EAASH,aAAa,IAPoB,yDAAX,yDDsDf,kBAAC,IAAD,CAAaU,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,WAEF,kBAAC,IAAD,CACEZ,KAAK,QACLyB,KAAK,QACLC,YAAY,QACZC,SA9BI,SAACT,GACzBP,EAASO,EAAMU,OAAOC,WAgCN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,MACP,kBAAC,IAAD,CACEC,MAAM,UACN/B,KAAK,SACLY,UAAU,aAHZ,aAOA,kBAAC,IAAD,CAAMoB,GAAG,KACP,kBAAC,IAAD,CAASD,MAAM,YAAYnB,UAAU,QAArC,eAQV,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmB,MAAM,UACNE,KAAMlC,EACNmC,aAAc,SAAChB,GACTnB,GACFM,EAASP,YAAeoB,KAG5BiB,aAAW,GARb,gDAYA,kBAAC,IAAD,CACEJ,MAAM,SACNE,KAAM9B,EACN+B,aAAc,SAAChB,GACTnB,GACFM,EAASH,YAAagB,KAG1BiB,aAAW,GARb","file":"static/js/22.bcd14b2a.chunk.js","sourcesContent":["export const successMessage = (success) => ({\r\n  type: \"SUCCESS\",\r\n  payload: {\r\n    success\r\n  }\r\n})\r\n\r\n\r\nexport const errorMessage = (error) => ({\r\n  type: \"ERROR\",\r\n  payload: {\r\n    error\r\n  }\r\n})","import React, { useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardGroup,\r\n  CCardHeader,\r\n  CCardTitle,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\n\r\nimport { sendToRecoveryEmail } from \"../../../redux/actions/rememberPassword\";\r\n\r\nimport { successMessage, errorMessage } from \"../../../redux/actions/messages\";\r\n\r\nconst RememberPassword = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { success, error } = useSelector((state) => state.MessagesReducer);\r\n\r\n  const [input, setInput] = useState();\r\n\r\n  const handleChangeInput = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleSubmitForm = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(sendToRecoveryEmail(input));\r\n  };\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol sm=\"12\" md=\"12\" lg=\"6\" xl=\"6\">\r\n            <CCardGroup className=\"d-flex flex-wrap\">\r\n              <CCard className=\"p-4 w-100\">\r\n                <CCardHeader>\r\n                  <CCardTitle>Recuperar Senha</CCardTitle>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm onSubmit={handleSubmitForm}>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>@</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleChangeInput}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"12\">\r\n                        <CButton\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"px-4 mr-2\"\r\n                        >\r\n                          Recuperar\r\n                        </CButton>\r\n                        <Link to=\"/\">\r\n                          <CButton color=\"secondary\" className=\"px-4\">\r\n                            Voltar\r\n                          </CButton>\r\n                        </Link>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                  <CAlert\r\n                    color=\"success\"\r\n                    show={success}\r\n                    onShowChange={(event) => {\r\n                      if (success) {\r\n                        dispatch(successMessage(event));\r\n                      }\r\n                    }}\r\n                    closeButton\r\n                  >\r\n                    Foi enviado uma nova senha para o seu e-mail\r\n                  </CAlert>\r\n                  <CAlert\r\n                    color=\"danger\"\r\n                    show={error}\r\n                    onShowChange={(event) => {\r\n                      if (success) {\r\n                        dispatch(errorMessage(event));\r\n                      }\r\n                    }}\r\n                    closeButton\r\n                  >\r\n                    Ocorreu um erro ao tentar recuperar senha\r\n                  </CAlert>\r\n                </CCardFooter>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RememberPassword;\r\n","import axios from \"axios\";\r\n\r\nimport { successMessage, errorMessage } from \"./messages\";\r\n\r\nexport const sendToRecoveryEmail = (email) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"\");\r\n\r\n    dispatch(successMessage(true));\r\n  } catch (err) {\r\n    console.error(err.message);\r\n    dispatch(errorMessage(true));\r\n  }\r\n};\r\n"],"sourceRoot":""}